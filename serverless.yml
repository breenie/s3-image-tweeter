
service: s3-image-tweeter

custom:
  bucket: ${env:BUCKET, 'bucket-name'}
  prefix: ${env:PREFIX, 'incoming/'} # Left trimmed with trailing slash
  suffix: ${env:SUFFIX, '.jpg'}

provider:
  name: aws
  runtime: nodejs6.10
  region: ${env:AWS_DEFAULT_REGION, 'eu-west-1'}
  iamRoleStatements:
    -  Effect: "Allow"
       Action:
         - "s3:GetObject"
       Resource:
         Fn::Join:
           - ""
           - - "arn:aws:s3:::"
             - "${self:custom.bucket}"
             - "/"
             - "${self:custom.prefix}"
             - "*"

functions:
  tweet:
    handler: handler.tweet
    events:
      - s3:
          bucket: ${self:custom.bucket}
          event: s3:ObjectCreated:*
          rules:
            - prefix: "${self:custom.prefix}"
            - suffix: "${self:custom.suffix}"
            
    environment:
      TWITTER_CONSUMER_KEY: ${env:TWITTER_CONSUMER_KEY}
      TWITTER_CONSUMER_SECRET: ${env:TWITTER_CONSUMER_SECRET}
      TWITTER_ACCESS_TOKEN_KEY: ${env:TWITTER_ACCESS_TOKEN_KEY}
      TWITTER_ACCESS_TOKEN_SECRET: ${env:TWITTER_ACCESS_TOKEN_SECRET}
      
resources:
  Resources:
    TweetLambdaPermissionImagesS3:
      Type: "AWS::Lambda::Permission"
      Properties:
        FunctionName:
          "Fn::GetAtt":
            - TweetLambdaFunction
            - Arn
        Principal: "s3.amazonaws.com"
        Action: "lambda:InvokeFunction"
        SourceAccount:
          Ref: AWS::AccountId
        SourceArn: "arn:aws:s3:::${self:custom.bucket}"
